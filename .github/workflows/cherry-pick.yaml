name: Cherry-pick to ddg_140

on:
  pull_request:
    types: [closed]
    branches:
      - master # Adjust this to your default branch if different


jobs:
  cherry-pick:
    # Only run if the PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for cherry-picking
      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          
      - name: Cherry-pick
        id: create-branch
        run: |
          # Fetch the target branch
          git fetch origin ddg_140:ddg_140
          
          # Create a unique branch name for the cherry-pick
          BRANCH_NAME="cherry-pick-pr-${{ github.event.pull_request.number }}-to-ddg_140"
          MERGE_COMMIT="${{ github.sha }}"

          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          
          # Create and checkout the new branch from ddg_140
          git checkout -b ${BRANCH_NAME} ddg_140
          
          # Attempt cherry-pick and capture success/failure
          if git cherry-pick ${MERGE_COMMIT}; then
            echo "Cherry-pick successful"
            echo "CHERRY_PICK_SUCCESSFUL=true" >> $GITHUB_OUTPUT
            
            # Push the branch if cherry-pick was successful
            git push origin ${BRANCH_NAME}
          else
            echo "Cherry-pick failed - conflicts detected"
            echo "CHERRY_PICK_SUCCESSFUL=false" >> $GITHUB_OUTPUT
            
            # Show the conflicted files for debugging
            echo "Conflicted files:"
            git status --short
            
            # Abort the cherry-pick to clean up
            git cherry-pick --abort || true
            
            # Exit with error code to mark the step as failed
            exit 1
          fi
          
      - name: Create PR
        if: steps.create-branch.outputs.CHERRY_PICK_SUCCESSFUL == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_PR_TOKEN }}
        run: |
          # Create the pull request
          gh pr create \
            --base ddg_140 \
            --head ${{ steps.create-branch.outputs.branch_name }} \
            --title "Cherry-pick PR #${{ github.event.pull_request.number }} to ddg_140" \
            --body "Cherry-pick of #${{ github.event.pull_request.number }}"